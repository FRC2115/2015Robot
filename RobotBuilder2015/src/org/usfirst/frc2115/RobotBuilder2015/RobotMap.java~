// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2115.RobotBuilder2015;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController liftFrontLiftVictor;
    public static SpeedController liftBackLiftVictor;
    public static DigitalInput liftLiftTopSwitch;
    public static DigitalInput liftLiftLowSwitch;
    public static SpeedController chassisLeftFrontTalon;
    public static SpeedController chassisLeftBackTalon;
    public static SpeedController chassisRightBackTalon;
    public static SpeedController chassisRightFrontTalon;
    public static RobotDrive chassisRobotDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        liftFrontLiftVictor = new Victor(4);
        LiveWindow.addActuator("Lift", "FrontLiftVictor", (Victor) liftFrontLiftVictor);
        
        liftBackLiftVictor = new Victor(5);
        LiveWindow.addActuator("Lift", "BackLiftVictor", (Victor) liftBackLiftVictor);
        
        liftLiftTopSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Lift", "LiftTopSwitch", liftLiftTopSwitch);
        
        liftLiftLowSwitch = new DigitalInput(1);
        LiveWindow.addSensor("Lift", "LiftLowSwitch", liftLiftLowSwitch);
        
        chassisLeftFrontTalon = new Talon(3);
        LiveWindow.addActuator("Chassis", "LeftFrontTalon", (Talon) chassisLeftFrontTalon);
        
        chassisLeftBackTalon = new Talon(2);
        LiveWindow.addActuator("Chassis", "LeftBackTalon", (Talon) chassisLeftBackTalon);
        
        chassisRightBackTalon = new Talon(1);
        LiveWindow.addActuator("Chassis", "RightBackTalon", (Talon) chassisRightBackTalon);
        
        chassisRightFrontTalon = new Talon(0);
        LiveWindow.addActuator("Chassis", "RightFrontTalon", (Talon) chassisRightFrontTalon);
        
        chassisRobotDrive = new RobotDrive(chassisLeftFrontTalon, chassisLeftBackTalon,
              chassisRightFrontTalon, chassisRightBackTalon);
        
        chassisRobotDrive.setSafetyEnabled(true);
        chassisRobotDrive.setExpiration(0.1);
        chassisRobotDrive.setSensitivity(0.5);
        chassisRobotDrive.setMaxOutput(1.0);

        chassisRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        chassisRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
