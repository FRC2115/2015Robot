// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2115.RobotBuilder2015.subsystems;

import org.usfirst.frc2115.RobotBuilder2015.RobotMap;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Lift extends Subsystem {
	
	// used in LiftSpeed and LiftMove's methods for lift's direction
	public static final boolean UP = true;
	public static final boolean DOWN = false;
	
	private double speed = 0.5;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController frontLiftVictor = RobotMap.liftFrontLiftVictor;
    SpeedController backLiftVictor = RobotMap.liftBackLiftVictor;
    DigitalInput liftTopSwitch = RobotMap.liftLiftTopSwitch;
    DigitalInput liftLowSwitch = RobotMap.liftLiftLowSwitch;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    	
    }
    
    public void changeSpeed(double accel) {
    	speed += accel;
    	
    	if(speed < 0.2) speed = 0.2;
    	if(speed > 1) speed = 1;
    	
    	SmartDashboard.putNumber("Lift Speed:", speed);
    }
    
    public void moveLift(boolean direction) {
    	int dir = 1;
    	if(direction == DOWN) dir = -1;
    	
    	RobotMap.liftBackLiftVictor.set(dir * speed);
    	RobotMap.liftFrontLiftVictor.set(dir * speed);
    	
    	SmartDashboard.putString("Lift direction:", dir == 1 ? "Up" : "Down");
    }
    
    public void stop() {
    	RobotMap.liftBackLiftVictor.set(0);
    	
    	SmartDashboard.putNumber("Lift Speed:", speed);
    	SmartDashboard.putString("Lift direction:", "None");
    }
}

